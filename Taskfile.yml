version: '3'

tasks:
  # Docker commands
  up:
    desc: "Starts the application"
    cmds:
      - docker compose -f app/compose.yaml up -d
  down:
    desc: "Stops the application"
    cmds:
      - docker compose -f app/compose.yaml down
  build:
    desc: "Builds the application"
    cmds:
      - docker compose -f app/compose.yaml build
  restart:
    desc: "Restarts the application"
    cmds:
      - docker compose -f app/compose.yaml down
      - docker compose -f app/compose.yaml up -d
  logs:
    desc: "Shows the application logs"
    cmds:
      - docker compose -f app/compose.yaml logs
  ps:
    desc: "Shows the application containers"
    cmds:
      - docker compose -f app/compose.yaml ps
  shell:
    desc: "Opens a shell in the application container"
    cmds:
      - docker compose -f app/compose.yaml exec app bash

  # Terraform commands
  init:
    desc: "Initializes Terraform"
    cmds:
      - terraform -chdir=environments/{{ .CLI_ARGS }} init
  plan:
    desc: "Creates an execution plan"
    cmds:
      - terraform -chdir=environments/{{ .CLI_ARGS }} plan
  apply:
    desc: "Applies the changes required to reach the desired state of the configuration"
    cmds:
      - terraform -chdir=environments/{{ .CLI_ARGS }} apply
  destroy:
    desc: "Destroys Terraform-managed infrastructure"
    cmds:
      - terraform -chdir=environments/{{ .CLI_ARGS }} destroy
  fmt:
    desc: "Rewrites Terraform configuration files to a canonical format"
    cmds:
      - terraform -chdir=environments/{{ .CLI_ARGS }} fmt
  validate:
    desc: "Validates the Terraform files"
    cmds:
      - terraform -chdir=environments/{{ .CLI_ARGS }} validate
  show:
    desc: "Inspects Terraform state or plan"
    cmds:
      - terraform -chdir=environments/{{ .CLI_ARGS }} show
